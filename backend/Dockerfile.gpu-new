# GPU版本Dockerfile - 支持NVIDIA CUDA
FROM nvidia/cuda:11.8-devel-ubuntu20.04

# 避免交互式安装
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1

# 设置工作目录
WORKDIR /app

# 安装系统依赖
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    python3-pip \
    python3-dev \
    build-essential \
    cmake \
    git \
    curl \
    ffmpeg \
    && rm -rf /var/lib/apt/lists/*

# 创建符号链接
RUN ln -s /usr/bin/python3 /usr/bin/python

# 复制项目文件
COPY pyproject.toml ./

# 升级pip并安装Python依赖
RUN pip3 install --no-cache-dir --upgrade pip
RUN pip3 install --no-cache-dir -e .

# 创建必要的目录
RUN mkdir -p uploads results models

# 编译whisper.cpp CUDA版本
RUN git clone https://github.com/ggerganov/whisper.cpp.git /tmp/whisper.cpp \
    && cd /tmp/whisper.cpp \
    && mkdir build && cd build \
    && cmake .. -DWHISPER_CUDA=ON -DBUILD_SHARED_LIBS=OFF \
    && make -j$(nproc) \
    && ls -la bin/ \
    && cp bin/whisper-cli /usr/local/bin/whisper-cli \
    && chmod +x /usr/local/bin/whisper-cli \
    && rm -rf /tmp/whisper.cpp

# 复制应用代码
COPY . .

# 设置环境变量
ENV PYTHONPATH=/app
ENV DEPLOYMENT_MODE=docker
ENV WHISPER_DEVICE=cuda

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8000/health || exit 1

# 暴露端口
EXPOSE 8000

# 默认启动命令
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

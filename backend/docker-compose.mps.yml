# Docker Compose for Audio2Sub with Apple Silicon MPS support
# For Apple Silicon Macs with Metal Performance Shaders
# Usage: docker-compose -f docker-compose.mps.yml up

version: '3.8'

services:
  # Redis service
  redis:
    image: redis:7-alpine
    container_name: audio2sub_redis_mps
    ports:
      - "6379:6379"
    command: redis-server --requirepass redispassword
    volumes:
      - redis_data_mps:/data
    networks:
      - audio2sub_network_mps
    restart: unless-stopped

  # Backend service (MPS version)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.mps
    container_name: audio2sub_backend_mps
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redispassword
      - WHISPER_DEVICE=metal
      - WHISPER_THREADS=0
      - MODEL_NAME=base
      - DEBUG=false
      - PYTORCH_ENABLE_MPS_FALLBACK=1
    volumes:
      - ./uploads:/app/uploads
      - ./results:/app/results
      - ./models:/app/models
    depends_on:
      - redis
    networks:
      - audio2sub_network_mps
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery worker (MPS version)
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile.mps
    container_name: audio2sub_worker_mps
    command: celery -A celery_app worker --loglevel=info --pool=solo
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redispassword
      - WHISPER_DEVICE=metal
      - WHISPER_THREADS=0
      - MODEL_NAME=base
      - DEBUG=false
      - PYTORCH_ENABLE_MPS_FALLBACK=1
    volumes:
      - ./uploads:/app/uploads
      - ./results:/app/results
      - ./models:/app/models
    depends_on:
      - redis
    networks:
      - audio2sub_network_mps
    restart: unless-stopped

  # Optional: Celery monitoring with Flower
  flower:
    build:
      context: .
      dockerfile: Dockerfile.mps
    container_name: audio2sub_flower_mps
    command: celery -A celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redispassword
    depends_on:
      - redis
    networks:
      - audio2sub_network_mps
    restart: unless-stopped

volumes:
  redis_data_mps:
    driver: local

networks:
  audio2sub_network_mps:
    driver: bridge

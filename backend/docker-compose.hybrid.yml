version: '3.8'

# 混合部署配置 - 容器化服务 + 宿主机whisper.cpp
# 这种模式允许Docker容器使用宿主机的whisper.cpp以获得更好的性能

networks:
  audio2sub_network_hybrid:
    driver: bridge

volumes:
  redis_data_hybrid:

services:
  redis:
    image: redis:7-alpine
    container_name: audio2sub_redis_hybrid
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data_hybrid:/data
    networks:
      - audio2sub_network_hybrid
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile.hybrid
    container_name: audio2sub_backend_hybrid
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      # 只挂载宿主机的模型文件目录 (可选，也可以让容器自动下载)
      - ${HOST_MODEL_DIR:-/Users/creed/workspace/sourceCode/whisper.cpp/models}:/app/models:ro
      # 挂载项目文件目录用于数据持久化
      - ./uploads:/app/uploads
      - ./results:/app/results
    environment:
      - DEPLOYMENT_MODE=hybrid
      - WHISPER_DEVICE=auto  # 让系统自动检测最佳设备
      - WHISPER_CPP_PATH=/usr/local/bin/whisper-cli  # 容器内编译的版本
      - MODEL_PATH=/app/models/ggml-base.bin
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - audio2sub_network_hybrid
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile.hybrid
    container_name: audio2sub_worker_hybrid
    restart: unless-stopped
    volumes:
      # 只挂载宿主机的模型文件目录
      - ${HOST_MODEL_DIR:-/Users/creed/workspace/sourceCode/whisper.cpp/models}:/app/models:ro
      - ./uploads:/app/uploads
      - ./results:/app/results
    environment:
      - DEPLOYMENT_MODE=hybrid
      - WHISPER_DEVICE=auto
      - WHISPER_CPP_PATH=/usr/local/bin/whisper-cli
      - MODEL_PATH=/app/models/ggml-base.bin
      - HOST_MODEL_PATH=/app/models/ggml-base.bin
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - audio2sub_network_hybrid
    command: celery -A celery_app worker --loglevel=info --concurrency=2
    healthcheck:
      test: ["CMD", "celery", "-A", "celery_app", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  flower:
    build:
      context: .
      dockerfile: Dockerfile.hybrid
    container_name: audio2sub_flower_hybrid
    restart: unless-stopped
    ports:
      - "5555:5555"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - audio2sub_network_hybrid
    command: celery -A celery_app flower --port=5555
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5555"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
